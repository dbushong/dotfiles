# Zsh Variables
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
PROMPT='%B%m%b %~ %B[%t]%b '
WATCH=all
WATCHFMT='%n %B%a%b %l from %M at %t.'

# Zsh Options
setopt append_history beep extended_glob no_match notify auto_pushd \
       auto_remove_slash bg_nice equals extended_glob magic_equal_subst \
       hist_ignore_dups pushd_ignore_dups pushd_silent pushd_to_home \
       no_auto_cd pushd_minus no_always_last_prompt rm_star_silent

# Commands
bindkey -e
stty erase "^H"
bindkey '\e[A' history-beginning-search-backward
bindkey '\C-P' up-line-or-history

# Aliases
alias more=less
alias mroe=less
alias pt=perltidy
alias vi=vim
alias ls='ls -F'
a() { awk "{ print \$$1 }" }
alias d='dirs -v | head'
alias sz='source ~/.zshenv;source ~/.zshrc'
fgl() { fgrep --color=always "$@" | less }
egl() { egrep --color=always "$@" | less }
alias last-paste='cat ~/.paste/*(On[1])'

# git prompt stuffs
function precmd() {
  local br _left _branch _right

  _left='%B%m%b '
  _right='%~ %B[%t]%b '
  
  br=$(git symbolic-ref HEAD 2>/dev/null) && br=${br#refs/heads/}

  if [ "z$br" = "z" ]; then
    if [ "$(git symbolic-ref HEAD 2>&1)" = \
        'fatal: ref HEAD is not a symbolic ref' ]; then
      _branch="%UNOBRANCH%u "
    fi
  elif [ "z$br" != zmaster ]; then
    _branch="%U$br%u "
  fi

  export PROMPT="$_left$_branch$_right"
}

# Completion
autoload -U compinit
compinit
