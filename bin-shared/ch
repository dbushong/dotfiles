#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Std;
use File::Basename;

my $prog = basename($0);
my %opt;
getopts('h', \%opt);
usage() if $opt{h} || !(@ARGV % 2);

my @cmds;
while (@ARGV > 2) {
  my $cmd = shift(@ARGV);
  my $arg = shift(@ARGV);

  if ($cmd eq 'mod') {
    usage() unless $arg =~ /^\d+$/;
    $arg = oct($arg);
    push(@cmds, sub { chmod($arg, @_) });
  }
  elsif ($cmd eq 'grp') {
    my $gid = getid($arg, 1);
    push(@cmds, sub { chown(-1, $gid, @_) });
  }
  elsif ($cmd eq 'own') {
    my ($uid, $gid);
    if ($arg =~ /:(.+)/) {
      $uid  = getid($`);
      $gid  = getid($1, 1);
    }
    else {
      $uid = getid($arg);
      $gid = -1;
    }
    push(@cmds, sub { chown($uid, $gid, @_) });
  }
  else {
    @ARGV = ($cmd, $arg, @ARGV);
    last;
  }
}

usage() unless @cmds;

$_->(@ARGV) for @cmds;

sub getid {
  my ($name, $group) = @_;
  return $name if $name =~ /^\d+$/;
  my @info = $group ? getgrnam($name) : getpwnam($name);
  die("$prog: no such " . ($group ? 'group' : 'user') . " '$name'\n")
    unless @info;
  $info[2];
}

sub usage {
  die <<EOU if $opt{h} || !(@ARGV % 2);
usage: $prog mod <mode> file [...]
          grp <group> file [...]
          own <user>[:<group>] file [...]
          more than one cmd may be given             
          mode must be numeric
EOU
}
