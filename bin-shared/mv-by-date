#!/usr/bin/perl

use strict;
use warnings;
use Image::ExifTool 'ImageInfo';
use Time::Local;
use POSIX 'strftime';
use Getopt::Std;
use File::Basename;
use File::Path;
use File::Copy;
use File::Find;

my $def_fmt = '%Y/%m/%d';

my %opt;
my $prog = basename $0;
getopts('hnvfk:E', \%opt);
die <<EOF if $opt{h} || @ARGV < 2;
usage: $prog [-E] [-n | -v] [-f] [-d strftime-fmt] file [dir2 [...]] dest-dir
       -E: don't use EXIF data even if available
       -n: don't actually move (implies -v)
       -d: specify an explicit format for dir to put things in;
           default: $def_fmt
       -v: verbose
       -f: force move; overwrite without asking; default is to skip and warn
EOF
$opt{v} = 1 if $opt{n};
$opt{d} = $def_fmt unless exists $opt{d};

my $dest = pop(@ARGV);

# 'DateTimeOriginal' => '2008:09:04 12:47:56',
my $item;
for (@ARGV) {
  s,/+$,,;
  unless (-e) {
    warn "$prog: $_ does not exist\n";
    next;
  }

  $item = $_;
  if (-d) {
    find({ wanted => \&mv_file, no_chdir => 1 }, $_);
  }
  elsif (-f) {
    mv_file(1);
  }
  else {
    warn "$prog: $item is not file or directory\n";
    next;
  }
}

sub mv_file {
  my ($single) = @_;

  my $file = $_;

  return if -d $file;

  my $ts;
  if ($opt{E}) {
    $ts = (stat($file))[9];
  }
  else {
    my $info = ImageInfo($file);
    my ($y, $mo, $d, $h, $mi, $s) = split(/[:\s]+/,
      $info->{DateTimeOriginal} || $info->{FileModifyDate});
    $ts = timelocal($s, $mi, $h, $d, $mo - 1, $y - 1900);
  }

  my $path = "$dest/" . strftime($opt{d}, localtime($ts));

  unless ($single) {
    my $dir  = $file;
    my $idir = dirname($item);
    $dir =~ s#^\Q$idir/##;
    $path .= "/$dir";
  }

  print "$file -> $path\n" if $opt{v};

  if (-e $path && !$opt{f}) {
    print STDERR "$path already exists; skipping move\n";
    return;
  }

  return if $opt{n};

  mkpath(dirname($path));
  move($file, $path) || warn $!;

  rmemptytree(dirname($file), $item) unless $single;
}

sub rmemptytree {
  my ($dir, $top) = @_;

  opendir(my $dh, $dir);
  my @files = readdir($dh);
  closedir($dh);

  return if @files;

  rmdir($dir);
  return if $dir eq $top;

  rmemptytree(dirname($dir));
}
